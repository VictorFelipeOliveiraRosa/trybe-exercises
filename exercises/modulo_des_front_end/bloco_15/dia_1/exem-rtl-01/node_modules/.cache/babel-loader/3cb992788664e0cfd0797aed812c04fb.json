{"ast":null,"code":"var _jsxFileName = \"/home/victor/trybe-exercises/exercises/modulo_des_front_end/bloco_15/dia_1/exem-rtl-01/src/components/ValidEmail.jsx\";\nimport React from 'react';\n\nconst verifyEmail = email => {\n  const emailRegex = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/;\n  return emailRegex.test(email);\n};\n\nconst ValidEmail = props => {\n  const {\n    email\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"id-email-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, `Valor: ${email}`), \"// eslint-disable-next-line no-nested-ternary\", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, verifyEmail(email) ? 'Email Valido' : verifyEmail(email) === '' ? '' : 'Email inválido'));\n};\n\nexport default ValidEmail;","map":{"version":3,"sources":["/home/victor/trybe-exercises/exercises/modulo_des_front_end/bloco_15/dia_1/exem-rtl-01/src/components/ValidEmail.jsx"],"names":["React","verifyEmail","email","emailRegex","test","ValidEmail","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,UAAU,GAAG,yCAAnB;AACA,SAAOA,UAAU,CAACC,IAAX,CAAgBF,KAAhB,CAAP;AACD,CAHD;;AAKA,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEJ,IAAAA;AAAF,MAAYI,KAAlB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkC,UAASJ,KAAM,EAAjD,CADF,gEAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,WAAW,CAACC,KAAD,CAAX,GAAqB,cAArB,GAAuCD,WAAW,CAACC,KAAD,CAAX,KAAuB,EAAvB,GAA4B,EAA5B,GAAiC,gBAA9E,CAHF,CADF;AAOD,CATD;;AAWA,eAAeG,UAAf","sourcesContent":["import React from 'react';\n\nconst verifyEmail = (email) => {\n  const emailRegex = /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/;\n  return emailRegex.test(email);\n};\n\nconst ValidEmail = (props) => {\n  const { email } = props;\n  return (\n    <div>\n      <h2 data-testid=\"id-email-user\">{`Valor: ${email}`}</h2>\n      // eslint-disable-next-line no-nested-ternary\n      <h3>{(verifyEmail(email) ? 'Email Valido' : (verifyEmail(email) === '' ? '' : 'Email inválido'))}</h3>\n    </div>\n  );\n};\n\nexport default ValidEmail;\n"]},"metadata":{},"sourceType":"module"}