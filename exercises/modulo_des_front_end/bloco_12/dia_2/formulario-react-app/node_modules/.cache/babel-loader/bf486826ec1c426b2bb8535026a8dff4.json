{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/victor/trybe-exercises/exercises/modulo_des_front_end/bloco_12/dia_2/formulario-react-app/src/components/SelectState.jsx\";\nimport React, { Component } from 'react';\n\nclass SelectState extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getFetchStates = async callback => {\n      const URL = 'https://servicodados.ibge.gov.br/api/v1/localidades/estados/';\n\n      try {\n        const data = await fetch(URL);\n        let items = await data.json();\n        await callback(items);\n      } catch (e) {\n        this.setState({\n          error: e\n        });\n      }\n    };\n\n    this.sortState = items => {\n      const results = items.map(iten => iten.sigla).sort().map((iten, index) => {\n        return {\n          id: index,\n          sigla: iten\n        };\n      });\n      this.setState({\n        isLoaded: true,\n        items: results.map(iten => {\n          return {\n            id: iten.id,\n            sigla: iten.sigla\n          };\n        })\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    this.getFetchStates(this.sortState);\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    const {\n      handleChange,\n      value\n    } = this.props;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field-states\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            hidden: true,\n            children: \"Estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.sigla,\n            children: item.sigla\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default SelectState;","map":{"version":3,"sources":["/home/victor/trybe-exercises/exercises/modulo_des_front_end/bloco_12/dia_2/formulario-react-app/src/components/SelectState.jsx"],"names":["React","Component","SelectState","constructor","props","getFetchStates","callback","URL","data","fetch","items","json","e","setState","error","sortState","results","map","iten","sigla","sort","index","id","isLoaded","state","render","handleChange","value","message","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAmC;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,cAVmB,GAUF,MAAOC,QAAP,IAAoB;AACnC,YAAMC,GAAG,GAAI,8DAAb;;AACA,UAAI;AACF,cAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB;AACA,YAAIG,KAAK,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAlB;AACA,cAAML,QAAQ,CAACI,KAAD,CAAd;AACD,OAJD,CAIE,OAAME,CAAN,EAAS;AACT,aAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAEF;AAAT,SAAd;AACD;AACF,KAnBkB;;AAAA,SAqBnBG,SArBmB,GAqBNL,KAAD,IAAW;AACrB,YAAMM,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,KAAvB,EAA8BC,IAA9B,GAAqCH,GAArC,CAAyC,CAACC,IAAD,EAAOG,KAAP,KAAiB;AACxE,eAAO;AACLC,UAAAA,EAAE,EAAED,KADC;AAELF,UAAAA,KAAK,EAAED;AAFF,SAAP;AAID,OALe,CAAhB;AAMA,WAAKL,QAAL,CAAc;AACZU,QAAAA,QAAQ,EAAE,IADE;AAEZb,QAAAA,KAAK,EAAEM,OAAO,CAACC,GAAR,CAAYC,IAAI,IAAI;AACzB,iBAAO;AACLI,YAAAA,EAAE,EAAEJ,IAAI,CAACI,EADJ;AAELH,YAAAA,KAAK,EAAED,IAAI,CAACC;AAFP,WAAP;AAID,SALM;AAFK,OAAd;AASD,KArCkB;;AAEjB,SAAKK,KAAL,GAAa;AACXV,MAAAA,KAAK,EAAE,IADI;AAEXS,MAAAA,QAAQ,EAAE,KAFC;AAGXb,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKL,cAAL,CAAoB,KAAKU,SAAzB;AACD;;AA+BDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASS,MAAAA,QAAT;AAAmBb,MAAAA;AAAnB,QAA6B,KAAKc,KAAxC;AACA,UAAM;AAAEE,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAA0B,KAAKvB,KAArC;;AACA,QAAGU,KAAH,EAAU;AACR,0BAAO;AAAA,8BAAcA,KAAK,CAACc,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAG,CAACL,QAAJ,EAAc;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAQ,UAAA,QAAQ,MAAhB;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,EAAd;AAAiB,YAAA,QAAQ,MAAzB;AAA0B,YAAA,QAAQ,MAAlC;AAAmC,YAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGb,KAAK,CAACO,GAAN,CAAUY,IAAI,iBACb;AAAsB,YAAA,KAAK,EAAGA,IAAI,CAACV,KAAnC;AAAA,sBAA6CU,IAAI,CAACV;AAAlD,aAAaU,IAAI,CAACP,EAAlB;AAAA;AAAA;AAAA;AAAA,kBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAUD;AACF;;AA3DgC;;AA8DnC,eAAepB,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass SelectState extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n    }\n    this.getFetchStates(this.sortState);\n  }\n\n  getFetchStates = async (callback) => {\n    const URL =  'https://servicodados.ibge.gov.br/api/v1/localidades/estados/';\n    try {\n      const data = await fetch(URL);\n      let items = await data.json();\n      await callback(items);\n    } catch(e) {\n      this.setState({ error: e});\n    }\n  };\n  \n  sortState = (items) => {\n    const results = items.map(iten => iten.sigla).sort().map((iten, index) => {\n      return {\n        id: index,\n        sigla: iten,\n      }\n    });\n    this.setState({ \n      isLoaded: true, \n      items: results.map(iten => {\n        return {\n          id: iten.id,\n          sigla: iten.sigla\n        } \n      }),\n    });\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    const { handleChange, value } = this.props;\n    if(error) {\n      return <div>Error: { error.message }</div>\n    } else if(!isLoaded) {\n      return <div>Loading...</div>\n    } else {\n      return (\n        <div className=\"field-states\">\n          <select required>\n            <option value=\"\" disabled selected hidden>Estado</option>\n            {items.map(item => (\n              <option key={item.id} value={ item.sigla }>{ item.sigla }</option>\n              ))}\n          </select>\n        </div>\n      )\n    }\n  }\n}\n\nexport default SelectState;"]},"metadata":{},"sourceType":"module"}